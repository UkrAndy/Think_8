{\rtf1\ansi\ansicpg1251\deff0\nouicompat\deflang1049{\fonttbl{\f0\fnil Consolas;}{\f1\fnil\fcharset204 Consolas;}{\f2\fnil\fcharset0 Consolas;}{\f3\fnil\fcharset204 Calibri;}{\f4\fnil\fcharset0 Calibri;}}
{\colortbl ;\red0\green128\blue0;\red255\green255\blue255;\red0\green0\blue0;\red128\green128\blue128;\red163\green21\blue21;\red0\green0\blue255;\red43\green145\blue175;\red0\green128\blue128;}
{\*\generator Riched20 10.0.14393}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\cf1\highlight2\f0\fs19\lang9 // ConsoleApplication123.cpp : Defines the entry point for the console application.\cf3\par
\cf1 //\cf3\par
\par
\cf4 #include\cf3  \cf5 "stdafx.h"\cf3\par
\cf4 #include\cf5 <iostream>\cf3\par
\par
\cf6 using\cf3  \cf6 namespace\cf3  std;\par
\cf6 class\cf3  \cf7 base\cf3  \{\par
\cf6 public\cf3  :\par
\tab\cf6 virtual\cf3  \cf6 void\cf3  meth1()\par
\tab\{\par
\tab\tab cout \cf8 <<\cf3  \cf5 "base"\cf3  \cf8 <<\cf3  endl;\par
\tab\}\par
\};\par
\cf1 //-------------------------------\cf3\par
\cf6 class\cf3  \cf7 derive\cf3  :\cf6 public\cf3  \cf7 base\cf3\par
\{\par
\cf6 public\cf3 :\par
\tab\cf6 void\cf3  meth1()\par
\tab\{\par
\tab\tab cout \cf8 <<\cf3  \cf5 "derive"\cf3  \cf8 <<\cf3  endl;\par
\tab\}\par
\tab\cf6 void\cf3  meth2()\par
\tab\{\par
\tab\tab cout \cf8 <<\cf3  \cf5 "derive----"\cf3  \cf8 <<\cf3  endl;\par
\tab\}\par
\par
\};\par
\cf6 class\cf3  \cf7 derive2\cf3  :\cf6 public\cf3  \cf7 base\cf3\par
\{\par
\cf6 public\cf3 :\par
\tab\cf6 void\cf3  meth1()\par
\tab\{\par
\tab\tab cout \cf8 <<\cf3  \cf5 "derive2"\cf3  \cf8 <<\cf3  endl;\par
\tab\}\par
\};\par
\cf6 class\cf3  \cf7 derive3\cf3  :\cf6 public\cf3  \cf7 base\cf3\par
\{\par
\cf6 public\cf3 :\par
\};\par
\par
\cf6 void\cf3  f1(\cf7 base\cf3 * \cf4 p\cf3 )\par
\{\par
\tab\cf4 p\cf3 ->meth1();\par
\}\par
\cf6 int\cf3  main()\par
\{\par
\tab\cf7 base\cf3 * b1 = \cf8 new\cf3  \cf7 base\cf3 ();\par
\tab b1->meth1();  \cf1 //\f1\lang1058\'cc\'b3\'f1\'f2\'e8\'f2\'fc \'e0\'e4\'f0\'e5\'f1\'f3 \'ee\'e1"\'ba\'ea\'f2\'e0 base\cf3\par
\par
\par
\tab\cf7 derive\cf3 * d1 = \cf8 new\cf3  \cf7 derive\cf3 ();\par
\tab b1 = d1;\par
\par
\tab b1->meth1();  \cf1 //\'cc\'b3\'f1\'f2\'e8\'f2\'fc \'e0\'e4\'f0\'e5\'f1\'f3 \'ee\'e1"\'ba\'ea\'f2\'e0 derive\cf3\par
\tab\par
\tab\cf7 derive2\cf3 * d2 = \cf8 new\cf3  \cf7 derive2\cf3 ();\par
\tab b1 = d2;\par
\par
\tab b1->meth1(); \cf1 //\'cc\'b3\'f1\'f2\'e8\'f2\'fc \'e0\'e4\'f0\'e5\'f1\'f3 \'ee\'e1"\'ba\'ea\'f2\'e0 derive2\cf3\par
\par
\tab\cf7 derive3\cf3 * d3 = \cf8 new\cf3  \cf7 derive3\cf3 ();\par
\tab b1 = d3;\par
\par
\tab b1->meth1(); \cf1 //\'cc\'b3\'f1\'f2\'e8\'f2\'fc \'e0\'e4\'f0\'e5\'f1\'f3 \'ee\'e1"\'ba\'ea\'f2\'e0 derive3\cf3\par
\tab\cf1 //============================\cf3\par
\tab\cf7 base\cf3 * * arr = \cf8 new \cf7 base\cf3 *[5];  \cf1 //\'cc\'e0\'f1\'e8\'e2 \'ef\'ee\'ea\'e0\'e6\'f7\'e8\'ea\'b3\'e2, \'f3 \'ff\'ea\'ee\'ec\'f3 \'e1\'f3\'e4\'e5\'ec\'ee \'e7\'e1\'e5\'f0\'b3\'e3\'e0\'f2\'e8 \'e0\'e4\'f0\'e5\'f1\'e8 \'ee\'e1"\'ba\'ea\'f2\'b3\'e2 \'ed\'e0\'f9\'e0\'e4\'ea\'b3\'e2\cf3\par
\tab arr[0] = \cf8 new\cf3  \cf7 derive\cf3 ();\par
\tab arr[1] = \cf8 new\cf3  \cf7 derive3\cf3 ();\par
\tab arr[2] = \cf8 new\cf3  \cf7 derive\cf3 ();\par
\tab arr[3] = \cf8 new\cf3  \cf7 derive2\cf3 ();\par
\tab arr[4] = \cf8 new\cf3  \cf7 base\cf3 ();\par
\tab\cf6 for\cf3  (\cf6 int\cf3  i = 0; i < 5; i++)\par
\tab\{\par
\tab\tab arr[i]->meth1();\f2\lang1033  //\f1\lang1058\'df\'ea\'e8\'e9 \'ec\'e5\'f2\'ee\'e4 \'e2\'e8\'e7\'ed\'e0\'f7\'e0\'ba\'f2\'fc\'f1\'ff \'e7\'e0\'eb\'e5\'e6\'e8\'f2\'fc \'e2\'b3\'e4 \'e0\'e4\'f0\'e5\'f1\'e8\par
\tab\}\par
\par
\tab f1(arr[3]);\par
\par
\par
\tab system(\cf5 "pause"\cf3 );\par
    \cf6 return\cf3  0;\par
\}\par
\par
\cf0\highlight0\f3\fs22 =======================================\par
\'cf\'f0\'e8\'ea\'eb\'e0\'e4. \'d1\'f2\'ee\'e2\'f0\'e8\'f2\'e8 \'ea\'eb\'e0\'f1 \'f4\'b3\'e3\'f3\'f0\'e0 \'b3 \'ed\'e0 \'ee\'f1\'ed\'ee\'e2\'b3 \'ed\'fc\'ee\'e3\'ee \'ea\'eb\'e0\'f1\'e8 \'ef\'f0\'ff\'ec\'ee\'ea\'f3\'f2\'ed\'e8\'ea \'b3 \'f2\'f0\'e8\'ea\'f3\'f2\'ed\'e8\'ea.\par
================ \f4\lang1033 Figure.h=============\par
\cf4\highlight2\f0\fs19 #pragma\cf3  \cf4 once\cf3\par
\cf4 #include\cf5 <string>\cf3\par
\cf6 using\cf3  \cf6 namespace\cf3  std;\par
\cf6 class\cf3  \cf7 Figure\cf3\par
\{\par
\cf6 public\cf3 :\par
\tab\cf6 int\cf3  sidesCount;\par
\tab\cf6 double\cf3 * sides;\par
\par
\par
\tab Figure();\par
\tab Figure(\cf6 int\cf3  sidesCount);\par
\tab\cf6 void\cf3  input();\par
\tab\cf6 virtual\cf3  \cf7 string\cf3  toString();\par
\tab\cf6 virtual\cf3  \cf6 double\cf3  getS() = 0;\par
\tab\cf6 virtual\cf3  \cf6 double\cf3  getP() = 0;\par
\par
\tab\cf6 bool\cf3  \cf8 operator==\cf3 (\cf7 Figure\cf3 * obj);\par
\tab ~Figure();\par
\};\par
\f2 ============================= Figure.cpp==============\par
\cf4\f0 #include\cf3  \cf5 "stdafx.h"\cf3\par
\cf4 #include\cf3  \cf5 "Figure.h"\cf3\par
\cf4 #include\cf3  \cf5 <iostream>\cf3\par
\cf6 using\cf3  \cf6 namespace\cf3  std;\par
\par
\cf7 Figure\cf3 ::Figure()\par
\{\par
\tab sidesCount = 0;\par
\tab sides = 0;\par
\}\par
\par
\cf7 Figure\cf3 ::Figure(\cf6 int\cf3  \cf4 sidesCount\cf3 )\par
\{\par
\tab\cf6 this\cf3 ->sidesCount = \cf4 sidesCount\cf3 ;\par
\tab sides = \cf8 new d\cf6 ouble\cf3 [\cf4 sidesCount\cf3 ];\par
\}\par
\par
\cf6 void\cf3  \cf7 Figure\cf3 ::input()\par
\{\par
\tab cout \cf8 <<\cf3  \cf5 "sides count ="\cf3 ;\par
\tab cin \cf8 >>\cf3  sidesCount;\par
\tab sides = \cf8 new d\cf6 ouble\cf3 [sidesCount];\par
\tab\cf6 for\cf3  (\cf6 int\cf3  i = 0; i < sidesCount; i++)\par
\tab\{\par
\tab\tab printf(\cf5 "side[%d]="\cf3 ,i);\par
\tab\tab cin \cf8 >>\cf3  sides[i];\par
\tab\}\par
\}\par
\par
\cf7 string\cf3  \cf7 Figure\cf3 ::toString()\par
\{\par
\tab\cf7 string\cf3  s = to_string(sides[0]);\par
\tab\cf6 for\cf3  (\cf6 int\cf3  i = 1; i < sidesCount; i++)\par
\tab\{\par
\tab\tab s \cf8 +=\cf3  \cf5 ","\cf8 +\cf3 to_string(sides[i]);\par
\tab\}\par
\tab\cf6 return\cf3  s;\par
\}\par
\par
\par
\cf6 bool\cf3  \cf7 Figure\cf3 ::\cf8 operator==\cf3 (\cf7 Figure\cf3  * \cf4 obj\cf3 )\par
\{\par
\tab\cf6 return\cf3  getS()==\cf4 obj\cf3 ->getS();\par
\}\par
\par
\cf7 Figure\cf3 ::~Figure()\par
\{\par
\tab\cf8 delete[]\cf3  sides;\par
\}\par
\f2 ====================== Rectangle.h=================\par
\cf4\f0 #pragma\cf3  \cf4 once\cf3\par
\cf4 #include\cf3  \cf5 "Figure.h"\cf3\par
\cf6 class\cf3  \cf7 Rectangle\cf3  :\par
\tab\cf6 public\cf3  \cf7 Figure\cf3\par
\{\par
\cf6 public\cf3 :\par
\tab\cf6 void\cf3  setA(\cf6 double\cf3  value);\par
\tab\cf6 double\cf3  getA();\par
\tab\cf6 void\cf3  setB(\cf6 double\cf3  value);\par
\tab\cf6 double\cf3  getB();\par
\tab Rectangle();\par
\tab Rectangle(\cf6 double\cf3  a);\par
\tab Rectangle(\cf6 double\cf3  a, \cf6 double\cf3  b);\par
\tab\cf6 virtual\cf3  \cf6 double\cf3  getS();\par
\tab\cf6 virtual\cf3  \cf6 double\cf3  getP();\par
\tab\cf7 string\cf3  toString();\par
\tab ~Rectangle();\par
\};\par
\par
\f2 ======================== Rectangle.cpp ============\par
\cf4\f0 #include\cf3  \cf5 "stdafx.h"\cf3\par
\cf4 #include\cf3  \cf5 "Rectangle.h"\cf3\par
\par
\par
\cf6 void\cf3  \cf7 Rectangle\cf3 ::setA(\cf6 double\cf3  \cf4 value\cf3 )\par
\{\par
\tab\cf6 if\cf3  (\cf4 value\cf3  >= 0)\par
\tab\tab sides[0] = \cf4 value\cf3 ;\par
\tab\cf6 else\cf3\par
\tab\tab\cf6 throw\cf3  \cf5 "error"\cf3 ;\par
\}\par
\par
\cf6 double\cf3  \cf7 Rectangle\cf3 ::getA()\par
\{\par
\tab\cf6 return\cf3  sides[0];\par
\}\par
\cf6 void\cf3  \cf7 Rectangle\cf3 ::setB(\cf6 double\cf3  \cf4 value\cf3 )\par
\{\par
\tab\cf6 if\cf3  (\cf4 value\cf3  >= 0)\par
\tab\tab sides[1] = \cf4 value\cf3 ;\par
\tab\cf6 else\cf3\par
\tab\tab\cf6 throw\cf3  \cf5 "error"\cf3 ;\par
\}\par
\par
\cf6 double\cf3  \cf7 Rectangle\cf3 ::getB()\par
\{\par
\tab\cf6 return\cf3  sides[1];\par
\}\par
\cf7 Rectangle\cf3 ::Rectangle():\cf7 Rectangle\cf3 (0,0)\par
\{\par
\}\par
\par
\cf7 Rectangle\cf3 ::Rectangle(\cf6 double\cf3  \cf4 a\cf3 ):\cf7 Rectangle\cf3 (\cf4 a\cf3 ,\cf4 a\cf3 )\par
\{\par
\}\par
\par
\cf7 Rectangle\cf3 ::Rectangle(\cf6 double\cf3  \cf4 a\cf3 , \cf6 double\cf3  \cf4 b\cf3 ):\cf7 Figure\cf3 (2)\par
\{\par
\tab setA(\cf4 a\cf3 );\par
\tab setB(\cf4 b\cf3 );\par
\}\par
\par
\cf6 double\cf3  \cf7 Rectangle\cf3 ::getS()\par
\{\par
\tab\cf6 return\cf3  getA()*getB();\par
\}\par
\par
\cf6 double\cf3  \cf7 Rectangle\cf3 ::getP()\par
\{\par
\tab\cf6 return\cf3  2*(getA()+getB());\par
\}\par
\par
\cf7 string\cf3  \cf7 Rectangle\cf3 ::toString()\par
\{\par
\tab\cf6 return\cf3  \cf5 "Rectangle("\cf8 +\cf7 Figure\cf3 ::toString()\cf8 +\cf5 ")"\cf3 ;\par
\}\par
\par
\par
\cf7 Rectangle\cf3 ::~Rectangle()\par
\{\par
\}\par
\f2 ========================== Triangle.h================\par
\cf4\f0 #pragma\cf3  \cf4 once\cf3\par
\cf4 #include\cf3  \cf5 "Figure.h"\cf3\par
\cf6 class\cf3  \cf7 Triangle\cf3  :\par
\tab\cf6 public\cf3  \cf7 Figure\cf3\par
\{\par
\cf6 public\cf3 :\par
\tab\cf6 void\cf3  setA(\cf6 double\cf3  value);\par
\tab\cf6 double\cf3  getA();\par
\tab\cf6 void\cf3  setB(\cf6 double\cf3  value);\par
\tab\cf6 double\cf3  getB();\par
\tab\cf6 void\cf3  setC(\cf6 double\cf3  value);\par
\tab\cf6 double\cf3  getC();\par
\tab Triangle();\par
\tab Triangle(\cf6 double\cf3  a);\par
\tab Triangle(\cf6 double\cf3  a, \cf6 double\cf3  b, \cf6 double\cf3  c);\par
\tab\cf6 double\cf3  getS();\par
\tab\cf6 double\cf3  getP();\par
\tab\cf7 string\cf3  toString();\par
\par
\tab ~Triangle();\par
\};\par
\par
\f2 ====================== Triangle.cpp ===========\par
\cf4\f0 #include\cf3  \cf5 "stdafx.h"\cf3\par
\cf4 #include\cf3  \cf5 "Triangle.h"\cf3\par
\par
\par
\cf7 Triangle\cf3 ::Triangle():\cf7 Triangle\cf3 (0)\par
\{\par
\}\par
\cf7 Triangle\cf3 ::Triangle(\cf6 double\cf3  \cf4 a\cf3 ):\cf7 Triangle\cf3 (\cf4 a\cf3 ,\cf4 a\cf3 ,\cf4 a\cf3 )\par
\{\par
\}\par
\cf7 Triangle\cf3 ::Triangle(\cf6 double\cf3  \cf4 a\cf3 , \cf6 double\cf3  \cf4 b\cf3 , \cf6 double\cf3  \cf4 c\cf3 ):\cf7 Figure\cf3 (3)\par
\{\par
\tab setA(\cf4 a\cf3 );\par
\tab setB(\cf4 b\cf3 );\par
\tab setC(\cf4 c\cf3 );\par
\}\par
\cf6 double\cf3  \cf7 Triangle\cf3 ::getS()\par
\{\par
\tab\cf6 double\cf3  p = getP() / 2;\par
\tab\cf6 return\cf3  sqrt(p*(p-getA())*(p-getB())*(p-getC()));\par
\}\par
\cf6 double\cf3  \cf7 Triangle\cf3 ::getP()\par
\{\par
\tab\cf6 return\cf3  getA()+getB()+getC();\par
\}\par
\cf7 string\cf3  \cf7 Triangle\cf3 ::toString()\par
\{\par
\tab\cf6 return\cf3  \cf5 "Triangle("\cf3  \cf8 +\cf3  \cf7 Figure\cf3 ::toString() \cf8 +\cf3  \cf5 ")"\cf3 ;\par
\}\par
\cf6 void\cf3  \cf7 Triangle\cf3 ::setA(\cf6 double\cf3  \cf4 value\cf3 )\par
\{\par
\tab\cf6 if\cf3  (\cf4 value\cf3  >= 0)\par
\tab\tab sides[0] = \cf4 value\cf3 ;\par
\tab\cf6 else\cf3\par
\tab\tab\cf6 throw\cf3  \cf5 "error"\cf3 ;\par
\}\par
\par
\cf6 double\cf3  \cf7 Triangle\cf3 ::getA()\par
\{\par
\tab\cf6 return\cf3  sides[0];\par
\}\par
\cf6 void\cf3  \cf7 Triangle\cf3 ::setB(\cf6 double\cf3  \cf4 value\cf3 )\par
\{\par
\tab\cf6 if\cf3  (\cf4 value\cf3  >= 0)\par
\tab\tab sides[1] = \cf4 value\cf3 ;\par
\tab\cf6 else\cf3\par
\tab\tab\cf6 throw\cf3  \cf5 "error"\cf3 ;\par
\}\par
\par
\cf6 double\cf3  \cf7 Triangle\cf3 ::getB()\par
\{\par
\tab\cf6 return\cf3  sides[1];\par
\}\par
\cf6 void\cf3  \cf7 Triangle\cf3 ::setC(\cf6 double\cf3  \cf4 value\cf3 )\par
\{\par
\tab\cf6 if\cf3  (\cf4 value\cf3  >= 0)\par
\tab\tab sides[2] = \cf4 value\cf3 ;\par
\tab\cf6 else\cf3\par
\tab\tab\cf6 throw\cf3  \cf5 "error"\cf3 ;\par
\}\par
\par
\cf6 double\cf3  \cf7 Triangle\cf3 ::getC()\par
\{\par
\tab\cf6 return\cf3  sides[2];\par
\}\par
\par
\par
\cf7 Triangle\cf3 ::~Triangle()\par
\{\par
\}\par
\f2 =======================main======================\par
\cf1\f0 // ConsoleApplication123.cpp : Defines the entry point for the console application.\cf3\par
\cf1 //\cf3\par
\par
\cf4 #include\cf3  \cf5 "stdafx.h"\cf3\par
\cf4 #include\cf5 <iostream>\cf3\par
\cf4 #include\cf3  \cf5 "Figure.h"\cf3\par
\cf4 #include\cf3  \cf5 "Rectangle.h"\cf3\par
\cf4 #include\cf3  \cf5 "Triangle.h"\cf3\par
\par
\par
\cf6 using\cf3  \cf6 namespace\cf3  std;\par
\par
\cf6 int\cf3  main()\par
\{\par
\tab\cf7 Figure\cf3 * *figures = \cf8 new \cf7 Figure\cf3 *[3];\par
\tab figures[0] = \cf8 new\cf3  \cf7 Triangle\cf3 (1,1,2);\par
\tab figures[1] = \cf8 new\cf3  \cf7 Rectangle\cf3 (21, 4);\par
\tab figures[2] = \cf8 new\cf3  \cf7 Triangle\cf3 (2,1,2);\par
\par
\par
\tab\cf6 for\cf3  (\cf6 int\cf3  i = 0; i < 3; i++)\par
\tab\{\par
\tab\tab cout\cf8 <<\cf3 figures[i]->toString().data();\par
\tab\tab cout \cf8 <<\cf3  endl;\par
\par
\tab\}\par
\par
\tab\cf6 double\cf3  totalS = 0;\par
\tab\cf6 for\cf3  (\cf6 int\cf3  i = 0; i < 3; i++)\par
\tab\{\par
\tab\tab totalS += figures[i]->getS();\par
\tab\}\par
\tab printf(\cf5 "total s=%f"\cf3 ,totalS);\par
\par
\par
\tab system(\cf5 "pause"\cf3 );\par
    \cf6 return\cf3  0;\par
\}\par
\par
\par
\cf0\highlight0\f4\fs22\lang9\par
}
 